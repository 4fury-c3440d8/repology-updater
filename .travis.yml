language: python
sudo: true
addons:
  postgresql: "10"
  apt:
    packages:
      - postgresql-10
      - postgresql-client-10
      - postgresql-server-dev-10
      - librpm-dev
env:
  global:
    - PGPORT=5433
    - REPOLOGY_CONFIG=repology-test.conf.default
python:
  - 3.6
before_install:
  - pip install Jinja2
  - pip install PyYAML
  - pip install coveralls
  - pip install flake8
  - pip install 'flake8-builtins!=1.1.0'
  - pip install flake8-import-order
  - pip install flake8-quotes
  - pip install flask
  - pip install lxml
  - pip install pillow
  - pip install psycopg2
  - pip install pytidylib # uses newer libtidy installed below
  - pip install requests
  - pip install rubymarshal
  - pip install voluptuous

  - wget -qO- https://github.com/repology/libversion/archive/master.tar.gz | tar -xzf- && ( cd libversion-master && cmake . && make && sudo make install && sudo ldconfig )
  - pip install libversion

  - wget -qO- https://github.com/htacg/tidy-html5/archive/master.tar.gz | tar -xzf- && ( cd tidy-html5-master && cmake . && make && sudo make install && sudo ldconfig )
  - wget -qO- https://github.com/repology/postgresql-libversion/archive/master.tar.gz | tar -xzf- && ( cd postgresql-libversion-master && sudo make install )

  - git clone --depth=1 https://github.com/repology/repology-rules.git rules.d
before_script:
  - sudo -u postgres psql -c "CREATE DATABASE repology_test;"
  - sudo -u postgres psql -c "CREATE USER repology_test WITH PASSWORD 'repology_test'"
  - sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE repology_test TO repology_test"
  - sudo -u postgres psql -d repology_test -c "CREATE EXTENSION IF NOT EXISTS pg_trgm"
  - sudo -u postgres psql -d repology_test -c "CREATE EXTENSION IF NOT EXISTS libversion"
  - echo "BADGE_FONT = '/usr/share/fonts/truetype/ttf-dejavu/DejaVuSans.ttf'" >> repology-test.conf.default
  - sed -i -e 's|dbname=repology_test|& port=5433 host=localhost|' repology-test.conf.default
script:
  # test building C utils
  - make

  # check yaml schemas
  - make check

  # check python syntax
  - make flake8

  # fill database with test data
  - ./repology-update.py --parse --initdb --database --no-safety-checks

  # smoke test bit
  - ./repology-dump.py --help

  # run unit tests with coverage
  - coverage run --source="repology,repology-app" --omit="repology/fetchers/*" -m unittest discover

after_success:
  - coveralls
